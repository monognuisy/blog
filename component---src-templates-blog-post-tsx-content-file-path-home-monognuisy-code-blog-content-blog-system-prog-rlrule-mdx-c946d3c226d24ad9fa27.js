"use strict";(self.webpackChunkgatsby_starter_blog=self.webpackChunkgatsby_starter_blog||[]).push([[4756],{83:function(e,n,a){a.r(n),a.d(n,{default:function(){return E}});var t=a(1151),s=a(7294),l=a(6917);function c(e){const n=Object.assign({p:"p",a:"a",h2:"h2",span:"span",strong:"strong",h3:"h3",br:"br",ol:"ol",li:"li",ul:"ul",h4:"h4"},(0,t.ah)(),e.components);return s.createElement(s.Fragment,null,s.createElement(n.p,null,s.createElement(n.a,{href:"https://cseweb.ucsd.edu//~ricko/rt_lt.rule.html"},"C Right-Left Rule (Rick Ord’s CSE 30 - UC San Diego)"),"\n를 참고하였습니다."),"\n",s.createElement(n.h2,{id:"right-to-left-rule",style:{position:"relative"}},s.createElement(n.a,{href:"#right-to-left-rule","aria-label":"right to left rule permalink",className:"anchor-header before"},s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Right to Left rule"),"\n",s.createElement(n.p,null,"C는 type이 굉장히 복잡한 언어이다. 이는 포인터(pointer), 배열(array), 함수(function)의 합작의 결과인데, 이들이 섞이는 순간 미치게 된다. 예를들어, 다음과 같은 ",s.createElement(n.strong,null,"선언"),"(Declaration)을 쉽게 해석할 수 있겠는가?"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span>fp1<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"쉽지 않다. 저것이 함수 포인터인지, 배열에 대한 포인터인지, 뭔가 많이 섞였는데 어느 순서로 섞였는지 쉽게 파악이 안된다. 그래서, 이를 복호화(decipher) 하는 과정이 필요한데, 이를 Right to Left(이하 RL) rule 이라고 한다."),"\n",s.createElement(n.h3,{id:"준비",style:{position:"relative"}},s.createElement(n.a,{href:"#%EC%A4%80%EB%B9%84","aria-label":"준비 permalink",className:"anchor-header before"},s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"준비"),"\n",s.createElement(n.p,null,"앞으로는 영어를 사용하자(??). RL rule은 영어권 사용자를 위해 만들어진 방법으로, 어순이 반대인 한국어로는 이해하기 어렵다. 즉, 한국어 사용자는 다음과 같은 과정을 거쳐야 한다."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c">암호같은 C 변수 선언문 <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">></span> RL을 사용하여 영어로 복호화 <span class="token operator">--</span><span class="token operator">--</span><span class="token operator">></span> 그 영문장을 한국어로 번역<span class="token operator">!</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"영문장을 한국어로 번역하는 과정은 그리 어렵지 않다. 그러면, RL rule에 대해 알아보자."),"\n",s.createElement(n.h3,{id:"rl-rule",style:{position:"relative"}},s.createElement(n.a,{href:"#rl-rule","aria-label":"rl rule permalink",className:"anchor-header before"},s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"RL rule"),"\n",s.createElement(n.p,null,"변수의 선언에서 다음 기호를 ",s.createElement(n.strong,null,"만나면"),", 아래에 표시된 대로 읽는다."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token operator">*</span>            <span class="token string">"pointer to"</span>                 번역하면 <span class="token string">"~의 포인터"</span>\n<span class="token punctuation">[</span><span class="token punctuation">]</span>           <span class="token string">"array of"</span>                   번역하면 <span class="token string">"~의 배열"</span>\n<span class="token punctuation">(</span><span class="token punctuation">)</span>           <span class="token string">"function returning"</span>         번역하면 <span class="token string">"~를 반환하는 함수"</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"일단은 영어로 읽기로 하자. 그럼, 어떻게 기호를 ",s.createElement(n.strong,null,"만날까"),"? ",s.createElement(n.br),"\n","다음과 같은 순서를 따른다."),"\n",s.createElement(n.ol,null,"\n",s.createElement(n.li,null,"\n",s.createElement("span",{style:l.Uw},s.createElement(n.strong,null,"식별자"),"를 찾는다."),"\n",s.createElement(n.p,null,"식별자(identifier)는 변수의 이름으로, 유일하다. 여기가 출발점이다. 그러면,\n문장을 다음과 같이 시작하면 된다."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c">식별자 is <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre></div>'}}),"\n"),"\n",s.createElement(n.li,null,"\n",s.createElement("span",{style:l.Uw},s.createElement(n.strong,null,"오른쪽으로 이동!")),"\n",s.createElement(n.ul,null,"\n",s.createElement(n.li,null,"식별자로부터 오른쪽으로 이동할 수 있을 때까지 오른쪽으로 이동하면서 기호를 읽는다. 즉,\n만일 식별자 오른쪽에 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">[]</code>'}}),"가 있다면 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">식별자 is array of ...</code>'}})," 으로 읽으면 된다."),"\n",s.createElement(n.li,null,"만일, ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">(</code>'}}),"를 만난다면, 그것은 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">()</code>'}}),"의 일부분일 것이다. 즉, ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">()</code>'}})," 전체를\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">식별자 is function returning ...</code>'}})," 이라고 읽고 넘어가면 된다. - 하지만, ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">(</code>'}}),"\n를 만나지 않고 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">)</code>'}})," 만 만난다면, 그것은 함수의 괄호가 아닌 다른 괄호의 닫는\n괄호이다. 즉, 오른쪽으로 이동하는 것을 ",s.createElement(n.strong,null,"멈춰야 한다"),"."),"\n"),"\n"),"\n",s.createElement(n.li,null,"\n",s.createElement("span",{style:l.Uw},s.createElement(n.strong,null,"왼쪽으로 이동!")),"\n",s.createElement(n.ul,null,"\n",s.createElement(n.li,null,"오른쪽으로 가기를 멈췄다면, 식별자로부터 왼쪽으로 이동할 수 있을 때까지 왼쪽으로 이동하면서 기호를 읽는다. 즉, 왼쪽에 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">*</code>'}}),"가 있다면 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">식별자 is pointer to ...</code>'}})," 으로 읽으면 된다."),"\n",s.createElement(n.li,null,s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">(</code>'}})," 는 여는 괄호이므로, 만난다면 멈춘다."),"\n",s.createElement(n.li,null,"만일 멈춘 후, 오른쪽으로 갈 수 있다면 다시 오른쪽으로 간다 (오른쪽 가다가 멈췄던 곳 부터)."),"\n"),"\n"),"\n"),"\n",s.createElement(n.h3,{id:"예시",style:{position:"relative"}},s.createElement(n.a,{href:"#%EC%98%88%EC%8B%9C","aria-label":"예시 permalink",className:"anchor-header before"},s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"예시"),"\n",s.createElement(n.p,null,"간단하게, 다음을 읽어보자."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"(배열 포인터인지 포인터 배열인지 헷갈린다면, 꼭 아래의 해설을 천천히 따라가보자!)"),"\n",s.createElement(n.ol,null,"\n",s.createElement(n.li,null,"\n",s.createElement(n.p,null,s.createElement(n.strong,null,"식별자 찾기")),"\n",s.createElement(n.p,null,"식별자는 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">p</code>'}}),"이다."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n     <span class="token operator">^</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"즉, ",s.createElement(l.EK,null,"“",s.createElement(n.strong,null,"p is"),"”")),"\n"),"\n",s.createElement(n.li,null,"\n",s.createElement(n.p,null,s.createElement(n.strong,null,"오른쪽으로 이동!")),"\n",s.createElement(n.ol,null,"\n",s.createElement(n.li,null,"\n",s.createElement(n.p,null,"오른쪽으로 이동한다. ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">[]</code>'}}),"가 보인다."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n      <span class="token operator">^</span><span class="token operator">^</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"즉, ",s.createElement(l.EK,null,"“p is ",s.createElement(n.strong,null,"array of"),"”")),"\n"),"\n",s.createElement(n.li,null,"\n",s.createElement(n.p,null,"더 이상 오른쪽으로 갈 수 없다. (세미콜론이 있기 때문) 따라서 멈추고, 다음 단계를 따른다."),"\n"),"\n"),"\n"),"\n",s.createElement(n.li,null,"\n",s.createElement(n.p,null,s.createElement(n.strong,null,"왼쪽으로 이동!")),"\n",s.createElement(n.ol,null,"\n",s.createElement(n.li,null,"\n",s.createElement(n.p,null,"왼쪽으로 이동한다. ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">*</code>'}}),"가 보인다."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token operator">^</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"즉, ",s.createElement(l.EK,null,"“p is array of ",s.createElement(n.strong,null,"pointer to"),"”")),"\n"),"\n",s.createElement(n.li,null,"\n",s.createElement(n.p,null,"왼쪽으로 이동한다. ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">int</code>'}}),"가 보인다."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"즉, ",s.createElement(l.EK,null,"“p is array of pointer to ",s.createElement(n.strong,null,"int"),"”")),"\n"),"\n",s.createElement(n.li,null,"\n",s.createElement(n.p,null,"더 이상 왼쪽으로 이동할 수 없고, 오른쪽으로도 갈 수 없다. 종료."),"\n"),"\n"),"\n"),"\n"),"\n",s.createElement(n.p,null,"즉, 답은 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">p is array of pointer to int</code>'}})," 가 된다. 쉽지 않은가?"),"\n",s.createElement(n.p,null,"조금 더 복잡한 예제를 풀어보자."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(n.ol,null,"\n",s.createElement(n.li,null,"\n",s.createElement(n.p,null,s.createElement(n.strong,null,"식별자 찾기")),"\n",s.createElement(n.p,null,"식별자는 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">func</code>'}})," 이다."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n       <span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"즉, ",s.createElement(l.EK,null,"“",s.createElement(n.strong,null,"func is"),"”")),"\n"),"\n",s.createElement(n.li,null,"\n",s.createElement(n.p,null,s.createElement(n.strong,null,"오른쪽으로 이동!")),"\n",s.createElement(n.ol,null,"\n",s.createElement(n.li,null,"\n",s.createElement(n.p,null,"한 번 이동하면 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">()</code>'}}),"가 나온다."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n           <span class="token operator">^</span><span class="token operator">^</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"즉, ",s.createElement(l.EK,null,"“func is ",s.createElement(n.strong,null,"function returning"),"”")),"\n"),"\n",s.createElement(n.li,null,"\n",s.createElement(n.p,null,"오른쪽이 닫는 괄호 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">)</code>'}})," 로 막혀있다. 즉, 왼쪽으로 이동한다."),"\n"),"\n"),"\n"),"\n",s.createElement(n.li,null,"\n",s.createElement(n.p,null,s.createElement(n.strong,null,"왼쪽으로 이동!")),"\n",s.createElement(n.ol,null,"\n",s.createElement(n.li,null,"\n",s.createElement(n.p,null,"식별자 왼쪽에 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">*</code>'}}),"가 있다."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token operator">^</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"즉, ",s.createElement(l.EK,null,"“func is function returning ",s.createElement(n.strong,null,"pointer to"),"”")),"\n"),"\n",s.createElement(n.li,null,"\n",s.createElement(n.p,null,"왼쪽이 여는 괄호 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">(</code>'}})," 로 막혀있다. 따라서 다시 오른쪽으로 간다."),"\n"),"\n"),"\n"),"\n",s.createElement(n.li,null,"\n",s.createElement(n.p,null,s.createElement(n.strong,null,"오른쪽으로 이동!")),"\n",s.createElement(n.ol,null,"\n",s.createElement(n.li,null,"\n",s.createElement(n.p,null,"앞서 멈춘 쪽에서 오른쪽으로 가면 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">()</code>'}}),"가 나온다."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n              <span class="token operator">^</span><span class="token operator">^</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"즉, ",s.createElement(l.EK,null,"“func is function returning pointer to ",s.createElement(n.strong,null,"function returning"),"”")),"\n"),"\n",s.createElement(n.li,null,"\n",s.createElement(n.p,null,s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">;</code>'}}),"에 의해 막히므로 다시 왼쪽으로 간다."),"\n"),"\n"),"\n"),"\n",s.createElement(n.li,null,"\n",s.createElement(n.p,null,s.createElement(n.strong,null,"왼쪽으로 이동!")),"\n",s.createElement(n.ol,null,"\n",s.createElement(n.li,null,"\n",s.createElement(n.p,null,"앞서 멈춘 쪽에서 왼쪽으로 가면 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">*</code>'}}),"가 나온다."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token operator">^</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"즉, ",s.createElement(l.EK,null,"“func is function returning pointer to function returning ",s.createElement(n.strong,null,"pointer to"),"”")),"\n"),"\n",s.createElement(n.li,null,"\n",s.createElement(n.p,null,"한번 더 가면 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">int</code>'}}),"가 나온다."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"즉, ",s.createElement(l.EK,null,"“func is function returning pointer to function returning pointer to ",s.createElement(n.strong,null,"int"),"”")),"\n"),"\n",s.createElement(n.li,null,"\n",s.createElement(n.p,null,"더이상 갈 수 없으므로 종료."),"\n"),"\n"),"\n"),"\n"),"\n",s.createElement(n.p,null,"따라서 답은 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">“func is function returning pointer to function returning pointer to int”</code>'}})," 이다. ",s.createElement(n.br),"\n","복잡하지만, 충분히 할만한 작업이다."),"\n",s.createElement(n.p,null,"만일 배열의 크기가 주어진다면, (",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">[3]</code>'}}),"과 같이) ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">“array (size 3) of ...”</code>'}})," 과 같이 해석하면 될 것이고, ",s.createElement(n.br),"\n","함수의 매개변수가 주어진다면, (",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">(char *, int)</code>'}}),"와 같이)\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">“function expecting (char *, int) returning ...”</code>'}})," 으로 해석하면 될 것이다."),"\n",s.createElement(n.h3,{id:"번역",style:{position:"relative"}},s.createElement(n.a,{href:"#%EB%B2%88%EC%97%AD","aria-label":"번역 permalink",className:"anchor-header before"},s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"번역"),"\n",s.createElement(n.p,null,"어렵지 않다. 영어니까 뒤에서부터 해석하면 되는 것이다. 즉,"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"는 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">“p is array of pointer to int”</code>'}})," 이므로, ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">“p는 int의 포인터의 배열이다”</code>'}})," 라고 말하면 된다."),"\n",s.createElement(n.p,null,"마찬가지로"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"는 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">“func is function returning pointer to function returning pointer to int”</code>'}})," 이므로,\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">”func는 int의 포인터를 반환하는 함수의 포인터를 반환하는 함수”</code>'}})," 가 된다."),"\n",s.createElement(n.p,null,"그렇다면, 맨 처음 나온 이것은?"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span>fp1<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">“fp1 is pointer to function expecting (int) returning pointer to array (size 10) of pointer to int”</code>'}})),"\n",s.createElement(n.p,null,"번역하면,\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">“fp1은 int의 포인터의 (크기가 10인) 배열의 포인터를 반환하는 (int를 매개변수로 가지는) 함수의 포인터”</code>'}})),"\n",s.createElement(n.h3,{id:"주의",style:{position:"relative"}},s.createElement(n.a,{href:"#%EC%A3%BC%EC%9D%98","aria-label":"주의 permalink",className:"anchor-header before"},s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"주의!"),"\n",s.createElement(n.h4,{id:"다른-것은-다르다",style:{position:"relative"}},s.createElement(n.a,{href:"#%EB%8B%A4%EB%A5%B8-%EA%B2%83%EC%9D%80-%EB%8B%A4%EB%A5%B4%EB%8B%A4","aria-label":"다른 것은 다르다 permalink",className:"anchor-header before"},s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"다른 것은 다르다."),"\n",s.createElement(n.p,null,"일단, 이 해석 방법에서는 포인터, 배열, 함수를 ",s.createElement(n.strong,null,"다르게")," 보고 있다. 즉, 배열 == 포인터나, 함수 == 포인터 이렇게 생각하면 절대로 안된다는 것이다."),"\n",s.createElement(n.p,null,"일단 RL로 해석한 다음, 그 뒤에 나름의 논리와 주관을 섞어서 같게 봐야 한다."),"\n",s.createElement(n.h4,{id:"되는-것과-되지-않는-것",style:{position:"relative"}},s.createElement(n.a,{href:"#%EB%90%98%EB%8A%94-%EA%B2%83%EA%B3%BC-%EB%90%98%EC%A7%80-%EC%95%8A%EB%8A%94-%EA%B2%83","aria-label":"되는 것과 되지 않는 것 permalink",className:"anchor-header before"},s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"되는 것과 되지 않는 것"),"\n",s.createElement(n.p,null,"다음과 같은 것은 C에서 허용하지 않는다."),"\n",s.createElement(n.ul,null,"\n",s.createElement(n.li,null,s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">[]()</code>'}}),"\n",s.createElement(n.ul,null,"\n",s.createElement(n.li,null,"array of function"),"\n"),"\n"),"\n",s.createElement(n.li,null,s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">()()</code>'}}),"\n",s.createElement(n.ul,null,"\n",s.createElement(n.li,null,"function returning function"),"\n"),"\n"),"\n",s.createElement(n.li,null,s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">()[]</code>'}}),"\n",s.createElement(n.ul,null,"\n",s.createElement(n.li,null,"function returning array of …"),"\n",s.createElement(n.li,null,"즉, 배열을 반환할 수는 없다는 것."),"\n"),"\n"),"\n"),"\n",s.createElement(n.h2,{id:"typedef와의-관계",style:{position:"relative"}},s.createElement(n.a,{href:"#typedef%EC%99%80%EC%9D%98-%EA%B4%80%EA%B3%84","aria-label":"typedef와의 관계 permalink",className:"anchor-header before"},s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"typedef와의 관계"),"\n",s.createElement(n.p,null,"이렇게 이상한 변수의 선언을 읽는 방법을 알아봤다. 이는 사실 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">typedef</code>'}}),"를 해석하는 데에도 유용하다."),"\n",s.createElement(n.p,null,"아마 대다수의 책에서 typedef에 대해 잘못 설명한다. 다음과 같이 말이다."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token operator">&lt;</span>원래 타입<span class="token operator">></span> <span class="token operator">&lt;</span>새로운 타입<span class="token operator">></span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"이는 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">typedef int pid_t;</code>'}})," 와 같이 맞는 것 같지만, 사실 그렇지 않다는 것은 다음만 봐도 알 수 있다."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token keyword">char</span> u24<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"(?? 이게 뭐임)"),"\n",s.createElement(n.p,null,"이렇게 보면 함수 포인터의 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">typedef</code>'}}),"도 이상하다."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token class-name">sighandler_t</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(n.h3,{id:"올바른-설명",style:{position:"relative"}},s.createElement(n.a,{href:"#%EC%98%AC%EB%B0%94%EB%A5%B8-%EC%84%A4%EB%AA%85","aria-label":"올바른 설명 permalink",className:"anchor-header before"},s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"올바른 설명"),"\n",s.createElement(n.p,null,s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">typedef</code>'}}),"에 대한 올바른 설명은 다음과 같다."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token operator">&lt;</span>타입의 선언<span class="token operator">></span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"여기서, ",s.createElement(n.strong,null,"타입의 선언"),"이라는 것은 ",s.createElement(n.strong,null,"식별자(identifier)로 새로운 타입"),"이 온다는 것이다."),"\n",s.createElement(n.p,null,"식별자가 타입이 되었다는 것을 제외하면, 앞서 봤던 변수의 선언과 별 다를 것이 없다. 예를 들어서 다음을 해석해보자."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token class-name">sighandler_t</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"똑같이 RL rule을 적용하면,"),"\n",s.createElement(n.p,null,s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">“sighandler_t is pointer to function expecting (int) returning void“</code>'}})),"\n",s.createElement(n.p,null,"대신, 중간에 이것이 ",s.createElement(n.strong,null,"타입"),"이라는 것을 알려주는 말을 넣으면 된다."),"\n",s.createElement(l.EK,null,"“sighandler_t is ",s.createElement(n.strong,null,"type which is")," pointer to function expecting (int) returning void“"),"\n",s.createElement(n.p,null,"한국어로 번역하면,"),"\n",s.createElement(l.EK,null,"“sighandler_t는 void를 반환하는 (int를 매개변수로 하는) 함수의 포인터",s.createElement(n.strong,null,"를 나타내는 타입이다"),"”"),"\n",s.createElement(n.p,null,"라고 할 수 있겠다."),"\n",s.createElement(n.p,null,"마찬가지로"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token keyword">char</span> u24<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"은 다음과 같다."),"\n",s.createElement(n.p,null,s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">“u24 is type which is array (size 3) of char”</code>'}})),"\n",s.createElement(n.p,null,"즉, ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">“u24는 char의 (크기가 3인) 배열을 나타내는 타입이다”</code>'}})),"\n",s.createElement(n.h4,{id:"아니-이런게-어디에-쓰임",style:{position:"relative"}},s.createElement(n.a,{href:"#%EC%95%84%EB%8B%88-%EC%9D%B4%EB%9F%B0%EA%B2%8C-%EC%96%B4%EB%94%94%EC%97%90-%EC%93%B0%EC%9E%84","aria-label":"아니 이런게 어디에 쓰임 permalink",className:"anchor-header before"},s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"아니 이런게 어디에 쓰임…"),"\n",s.createElement(n.p,null,"실제로 쓰인다. glibc의 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">setjmp.h</code>'}})," 를 살펴보면 다음과 같은 구절(?)이 있다."),"\n",s.createElement(n.p,null,s.createElement(n.a,{href:"https://sites.uclouvain.be/SystInfo/usr/include/setjmp.h.html"},"setjmp.h")),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">__jmp_buf_tag</span> jmp_buf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,"즉, nonlocal jump시 필요한 type인 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">jmp_buf</code>'}}),"는 사실, ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">“구조체 __jmp_buf_tag의 (크기가 1인) 배열”</code>'}})," 이다. 따라서, ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">setjmp</code>'}}),"시에 인자로 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">&amp;jmp_buf</code>'}}),"가 아닌, 그냥 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">jmp_buf</code>'}})," 를 넘겨주어도 되는 것이다."),"\n",s.createElement(n.h3,{id:"오",style:{position:"relative"}},s.createElement(n.a,{href:"#%EC%98%A4","aria-label":"오 permalink",className:"anchor-header before"},s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"오…"),"\n",s.createElement(n.p,null,"이렇게 보면 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">typedef</code>'}}),", 괜찮지 않은가? RL rule만 완벽히 터득하면 오히려 직관적이라는 느낌까지 든다."),"\n",s.createElement(n.p,null,"근데, 이렇게 선언과 동일한 문법을 쓸 것이면, ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">typedec</code>'}}),"로 이름을 지었으면 더 좋았을 것이라는 생각이 든다."),"\n",s.createElement(n.h2,{id:"또-다른-팁",style:{position:"relative"}},s.createElement(n.a,{href:"#%EB%98%90-%EB%8B%A4%EB%A5%B8-%ED%8C%81","aria-label":"또 다른 팁 permalink",className:"anchor-header before"},s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"또 다른 팁"),"\n",s.createElement(n.p,null,"사실 이 RL rule은 constant pointer 등의 해석에도 도움이 된다. 다음의 예시를 보자."),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">const</span> <span class="token keyword">int</span> <span class="token operator">*</span>p<span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">“p is pointer to const int”</code>'}})),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token operator">*</span> <span class="token keyword">const</span> p<span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(n.p,null,s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">“p is constant pointer to int”</code>'}})),"\n",s.createElement(n.p,null,"ㅇㅎ이"))}var r=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?s.createElement(n,e,s.createElement(c,e)):c(e)},o=a(1883),p=a(2483),u=a(4842),i=a(2825),g=a(2949),d=a(9425),m=a(5067);const h=e=>{var n;let{data:a,location:t,children:l}=e;const c=a.mdx,r=(null===(n=a.site.siteMetadata)||void 0===n?void 0:n.title)||"Title",{previous:h,next:E}=a,k=c.frontmatter.tags,f=c.frontmatter.sidenotes;return s.createElement(u.Z,{location:t,title:r},s.createElement(i.Z,{title:c.frontmatter.title,description:c.frontmatter.description||c.excerpt}),s.createElement(m.Z,null),s.createElement("article",{className:"blog-post",itemScope:!0,itemType:"http://schema.org/Article"},s.createElement("header",null,s.createElement("h1",{itemProp:"headline"},c.frontmatter.title),s.createElement("p",null,c.frontmatter.date),s.createElement("ul",{style:{display:"flex",flexWrap:"wrap",justifyContent:"flex-start",listStyle:"none",padding:0}},k.map((e=>s.createElement("li",{key:e,style:{marginRight:"1rem"}},s.createElement(g.Z,{tagName:e})))))),s.createElement("section",{itemProp:"articleBody"},l),s.createElement("hr",null)),s.createElement(d.Z,{sidenotesRecord:f}),s.createElement("nav",{className:"blog-post-nav"},s.createElement("ul",{style:{display:"flex",flexWrap:"wrap",justifyContent:"space-between",listStyle:"none",padding:0}},s.createElement("li",null,h&&s.createElement(o.Link,{to:h.fields.slug,rel:"prev"},"← ",h.frontmatter.title)),s.createElement("li",null,E&&s.createElement(o.Link,{to:E.fields.slug,rel:"next"},E.frontmatter.title," →")))),s.createElement(p.Z,{repo:"monognuisy/blog",theme:"github-light"}))};function E(e){return s.createElement(h,e,s.createElement(r,e))}},2483:function(e,n,a){var t=a(7294);const s=t.memo((e=>{let{repo:n,theme:a}=e;const s=(0,t.createRef)();return(0,t.useLayoutEffect)((()=>{const e=document.createElement("script"),t={src:"https://utteranc.es/client.js",repo:n,theme:a,"issue-term":"pathname",label:"✨💬 comments ✨",crossOrigin:"anonymous",async:"true"};Object.entries(t).forEach((n=>{let[a,t]=n;e.setAttribute(a,t)})),s.current.appendChild(e)}),[n]),t.createElement("div",{ref:s,className:"utterances-wrapper"})}));s.displayName="Utterances",n.Z=s},9425:function(e,n,a){var t=a(5785),s=a(7294),l=a(1883);const c=e=>{let{pos:n,id:a,elements:t,children:c}=e;const{0:r,1:o}=(0,s.useState)(!1),{0:p,1:u}=(0,s.useState)(!1),i="#fff9db",g="#ffdc5c",d={top:0,position:"absolute",boxShadow:"rgba(0, 0, 0, 0.01) 0px 6px 24px 0px, rgba(0, 0, 0, 0.08) 0px 0px 0px 1px",padding:"10px",maxWidth:"300px",width:"100%",borderRadius:"5px",textDecoration:"none",color:"#2e353f",backgroundColor:r?"#eeeeee":"#ffffff",display:"block",transition:"0.2s"};return s.createElement(l.Link,{className:"sn-ref",style:{...d,top:n},id:"sn-ref-"+(a+1),onMouseEnter:()=>{return e=a,o((()=>!0)),void(t[e].style.backgroundColor=g);var e},onMouseLeave:()=>{return e=a,o((()=>!1)),void(p||(t[e].style.backgroundColor=i));var e},onClick:()=>{return e=a,console.log(e),t[e].style.backgroundColor=g,u((()=>!0)),setTimeout((()=>u(!1)),1e3),void setTimeout((()=>t[e].style.backgroundColor=i),1e3);var e},to:"./#sn-"+(a+1)},s.createElement("span",null,c))},r=e=>e.split("").map((e=>e.charCodeAt(0))).reduce(((e,n)=>e+(10===n||n>>7?1.8:1)),0);n.Z=e=>{let{sidenotesRecord:n}=e;const{0:a,1:l}=(0,s.useState)([]),{0:o,1:p}=(0,s.useState)([]);return(0,s.useEffect)((()=>{null==n||n.forEach((e=>{const n=e.id,a=document.querySelector("#sn-"+n),s=a.getBoundingClientRect().top+window.scrollY;l((n=>[].concat((0,t.Z)(n),[{pos:s,content:e.content}]))),p((e=>[].concat((0,t.Z)(e),[a])))}))}),[]),null==n||n.forEach(((e,n)=>{if(n<a.length-1){const t=a[n].pos,s=a[n+1].pos,l=24*Math.ceil(7.8*r(e.content)/269)-5;t+l>=s&&(a[n+1].pos=t+l+45)}})),s.createElement("div",{className:"sidenotes-wrapper"},a.map(((e,n)=>{const{pos:a,content:t}=e,l="sn-ref-"+(n+1);return s.createElement(c,{id:n,pos:a,key:l,elements:o},t)})))}},5067:function(e,n,a){var t=a(7294);n.Z=()=>t.createElement("div",{className:"toc-wrapper"})},6917:function(e,n,a){a.d(n,{DQ:function(){return r},EK:function(){return l},Uw:function(){return o},bd:function(){return p},y$:function(){return c}});var t=a(7294),s=a(1883);const l=e=>{let{language:n="text",children:a}=e;return t.createElement("code",{className:"language-"+n},a)},c=e=>{let{color:n=o,children:a}=e;return t.createElement("span",{style:n},a)},r=e=>{let{id:n,children:a}=e;const{0:l,1:c}=(0,t.useState)(!1),{0:r,1:o}=(0,t.useState)(null),{0:p,1:u}=(0,t.useState)(!1),i="#ffffff",g="#eeeeee";(0,t.useEffect)((()=>{const e="sn-ref-"+n,a=document.querySelector("#"+e);o((()=>a))}),[l]);const d={backgroundColor:l?"#ffdc5c":"#fff9db",padding:"3px",borderRadius:"3px",textDecoration:"none",color:"#2e353f",transition:"0.2s"};return t.createElement(s.Link,{to:"./#sn-ref-"+n,id:"sn-"+n,style:d,onMouseEnter:()=>{c((()=>!0)),r&&(r.style.backgroundColor=g)},onMouseLeave:()=>{c((()=>!1)),r&&!p&&(r.style.backgroundColor=i)},onClick:e=>{console.log(e),r.style.backgroundColor=g,u((()=>!0)),setTimeout((()=>u(!1)),1e3),setTimeout((()=>r.style.backgroundColor=i),1e3)}},t.createElement("span",null,a))},o={backgroundColor:"#aff0ef",padding:"3px",borderRadius:"3px"},p={backgroundColor:"#ffb8bb",padding:"3px",borderRadius:"3px"}},1151:function(e,n,a){a.d(n,{ah:function(){return l}});var t=a(7294);const s=t.createContext({});function l(e){const n=t.useContext(s);return t.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}}}]);
//# sourceMappingURL=component---src-templates-blog-post-tsx-content-file-path-home-monognuisy-code-blog-content-blog-system-prog-rlrule-mdx-c946d3c226d24ad9fa27.js.map