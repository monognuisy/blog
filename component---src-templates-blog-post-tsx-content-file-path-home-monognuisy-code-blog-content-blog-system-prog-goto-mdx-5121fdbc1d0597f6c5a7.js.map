{"version":3,"file":"component---src-templates-blog-post-tsx-content-file-path-home-monognuisy-code-blog-content-blog-system-prog-goto-mdx-5121fdbc1d0597f6c5a7.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./content/blog/system-prog/goto.mdx","webpack://gatsby-starter-blog/./src/templates/blog-post.tsx","webpack://gatsby-starter-blog/./src/components/Utterances.tsx","webpack://gatsby-starter-blog/./src/components/sidenotes.tsx","webpack://gatsby-starter-blog/./src/components/toc.tsx","webpack://gatsby-starter-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    a: \"a\",\n    span: \"span\",\n    p: \"p\",\n    h3: \"h3\",\n    strong: \"strong\",\n    br: \"br\",\n    ol: \"ol\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, {\n    id: \"-goto\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#-goto\",\n    \"aria-label\": \" goto permalink\",\n    className: \"anchor-header before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"🤔 goto?\"), \"\\n\", React.createElement(_components.p, null, \"많은 C 입문 교재를 보면 goto를 마치 ‘절대로 쓰면 안되는 것’ 이라던지, ‘한 번이라도 쓰면 큰일이 나는 것’ 과 같이 취급한다.\\n컴퓨터 과학에 지대한 영향을 끼친 에츠허르 다익스트라(Edsger W. Dijkstra) 옹께서 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">goto</code>\"\n    }\n  }), \"를 절대로 쓰지 말라고 한 것의 영향이\\n크다고 생각한다.\"), \"\\n\", React.createElement(_components.p, null, \"그렇다면, 왜 쓰지 말아야 할까?\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"️-굳이-쓸-필요가-없다\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EF%B8%8F-%EA%B5%B3%EC%9D%B4-%EC%93%B8-%ED%95%84%EC%9A%94%EA%B0%80-%EC%97%86%EB%8B%A4\",\n    \"aria-label\": \"️ 굳이 쓸 필요가 없다 permalink\",\n    className: \"anchor-header before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"🤦‍♂️ 굳이 쓸 필요가 없다!\"), \"\\n\", React.createElement(_components.p, null, \"다음 두 코드는 완벽히 동일하게 작동한다. 어느 것이 더 깔끔한가?\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">int</span> <span class=\\\"token function\\\">sumTo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> N<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">int</span> res <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;=</span> N<span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        res <span class=\\\"token operator\\\">+=</span> i<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> res<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">int</span> <span class=\\\"token function\\\">sumTo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> N<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">int</span> res <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">int</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>i <span class=\\\"token operator\\\">></span> N<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">goto</span> done<span class=\\\"token punctuation\\\">;</span>\\n\\nloop<span class=\\\"token operator\\\">:</span>\\n    res <span class=\\\"token operator\\\">+=</span> i<span class=\\\"token punctuation\\\">;</span>\\n    i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>i <span class=\\\"token operator\\\">&lt;=</span> N<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">goto</span> loop<span class=\\\"token punctuation\\\">;</span>\\n\\ndone<span class=\\\"token operator\\\">:</span>\\n    <span class=\\\"token keyword\\\">return</span> res<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"당연히 위의 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">for</code>\"\n    }\n  }), \" 문이 더 간결하고 깔끔해 보인다. \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">goto</code>\"\n    }\n  }), \"문을 쓴 코드는 마치 어셈블리어 같다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"nasm\\\"><pre class=\\\"language-nasm\\\"><code class=\\\"language-nasm\\\">.sumTo\\n    pushq   <span class=\\\"token operator\\\">%</span><span class=\\\"token register variable\\\">rbx</span>\\n    movl    <span class=\\\"token number\\\">$0</span>, <span class=\\\"token operator\\\">%</span><span class=\\\"token register variable\\\">eax</span>\\n    movl    <span class=\\\"token number\\\">$1</span>, <span class=\\\"token operator\\\">%</span><span class=\\\"token register variable\\\">ebx</span>\\n    cmp     <span class=\\\"token operator\\\">%</span><span class=\\\"token register variable\\\">rdi</span>, <span class=\\\"token operator\\\">%</span><span class=\\\"token register variable\\\">rbx</span>\\n    jg      .DONE\\n.LOOP\\n    addq    <span class=\\\"token operator\\\">%</span><span class=\\\"token register variable\\\">rbx</span>, <span class=\\\"token operator\\\">%</span><span class=\\\"token register variable\\\">rax</span>\\n    addq    <span class=\\\"token number\\\">$1</span>, <span class=\\\"token operator\\\">%</span><span class=\\\"token register variable\\\">rbx</span>\\n    cmp     <span class=\\\"token operator\\\">%</span><span class=\\\"token register variable\\\">rdi</span>, <span class=\\\"token operator\\\">%</span><span class=\\\"token register variable\\\">rbx</span>\\n    jle     .LOOP\\n.DONE\\n    popq    <span class=\\\"token operator\\\">%</span><span class=\\\"token register variable\\\">rbx</span>\\n    ret</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"(최대한 단순히 logic만 표현하였다.)\"), \"\\n\", React.createElement(_components.p, null, \"이렇게, 굳이 어셈블리어로 쓰기 위한 것이 아닌 이상, goto 문은 대부분 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">if</code>\"\n    }\n  }), \"와 같은 조건문과 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">while</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">for</code>\"\n    }\n  }), \"과 같은 반복문으로 \", React.createElement(_components.strong, null, \"대체\"), \"될 수 있다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"-스파게티-코드\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#-%EC%8A%A4%ED%8C%8C%EA%B2%8C%ED%8B%B0-%EC%BD%94%EB%93%9C\",\n    \"aria-label\": \" 스파게티 코드 permalink\",\n    className: \"anchor-header before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"🤮 스파게티 코드?\"), \"\\n\", React.createElement(_components.p, null, \"또한, \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">goto</code>\"\n    }\n  }), \"를 남용하면 흔히 말하는 \", React.createElement(_components.strong, null, \"스파게티 코드\"), \"가 나올 수 있다. 만드는 법은 어렵지 않다. 다만, 해석하기 힘들 뿐.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token macro property\\\"><span class=\\\"token directive-hash\\\">#</span><span class=\\\"token directive keyword\\\">include</span> <span class=\\\"token string\\\">&lt;stdio.h></span></span>\\n\\n<span class=\\\"token keyword\\\">int</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">int</span> x <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> y <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> z <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">goto</span> L2<span class=\\\"token punctuation\\\">;</span>\\n\\nL1<span class=\\\"token operator\\\">:</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">++</span>x <span class=\\\"token operator\\\">&amp;</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">goto</span> end<span class=\\\"token punctuation\\\">;</span>\\n\\nL3<span class=\\\"token operator\\\">:</span>\\n    z <span class=\\\"token operator\\\">-=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">goto</span> L2<span class=\\\"token punctuation\\\">;</span>\\n    y<span class=\\\"token operator\\\">--</span><span class=\\\"token punctuation\\\">;</span>\\n\\nL2<span class=\\\"token operator\\\">:</span>\\n    x <span class=\\\"token operator\\\">+=</span> z<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>z <span class=\\\"token operator\\\">&amp;</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">goto</span> L1<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">goto</span> L3<span class=\\\"token punctuation\\\">;</span>\\n\\nend<span class=\\\"token operator\\\">:</span>\\n    <span class=\\\"token function\\\">printf</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"%d, %d, %d\\\\n\\\"</span><span class=\\\"token punctuation\\\">,</span> x<span class=\\\"token punctuation\\\">,</span> y<span class=\\\"token punctuation\\\">,</span> z<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"(이게 바로 예상이 된다면… \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">goto</code>\"\n    }\n  }), \"를 마음껏 써도 좋다. 물론 혼자만.)\"), \"\\n\", React.createElement(_components.p, null, \"이렇게 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">goto</code>\"\n    }\n  }), \"를 쓸데없이 남발하면, 보기도 싫고, 해석하기도 힘들고, 건들기는 더욱 두려운 코드가 만들어진다. \", React.createElement(_components.br), \"\\n\", \"그럼, 정말로 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">goto</code>\"\n    }\n  }), \"는 ‘절대로 쓰면 안되는 것’일까?\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"-다중-반복문의-탈출\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#-%EB%8B%A4%EC%A4%91-%EB%B0%98%EB%B3%B5%EB%AC%B8%EC%9D%98-%ED%83%88%EC%B6%9C\",\n    \"aria-label\": \" 다중 반복문의 탈출 permalink\",\n    className: \"anchor-header before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"👍 다중 반복문의 탈출\"), \"\\n\", React.createElement(_components.p, null, \"의외로, 좋은 사용처가 있다. 바로, \", React.createElement(_components.strong, null, \"다중 반복문\"), \"(nested loop)의 탈출이다. \", React.createElement(_components.br), \"\\n\", \"이를 위해 간단한 C-like pseudo code를 작성하면 다음과 같다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token comment\\\">// do something...</span>\\n<span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> j <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> k <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token comment\\\">// nested for문 전체를 break 해버리고 싶음!</span>\\n            <span class=\\\"token keyword\\\">goto</span> out<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nout<span class=\\\"token operator\\\">:</span>\\n<span class=\\\"token comment\\\">// nice break. do something...</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"오히려 이런 경우에는 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">goto</code>\"\n    }\n  }), \"를 사용하지 않으면 복잡해진다. \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">goto</code>\"\n    }\n  }), \"를 안쓰면 flag 변수를 만들어서 매번 검사하고 탈출해야 하는데,\\n반복문이 깊어지면 깊어질수록, 이는 크게 비효율적일 것이다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token comment\\\">// do something...</span>\\n<span class=\\\"token keyword\\\">int</span> flag <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> j <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span> k <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token comment\\\">// nested for문 전체를 break 해버리고 싶음!</span>\\n            flag <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>flag<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>flag<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>flag<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// 이 얼마나 비효율적인가!</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"물론, flag 변수가 많이 사용되는 것은 비트마스킹을 통해 어느정도 해결할 수 있다. 그럼에도 불구하고, 저 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">if</code>\"\n    }\n  }), \"문은 어쩔 수 없다.\"), \"\\n\", React.createElement(_components.p, null, \"따라서, 다중 반복문에서는 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">goto</code>\"\n    }\n  }), \"를 사용하는 것이 가독성이나 확장성 측면에서 좋다고 할 수 있다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"-간단한-예외처리\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#-%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%98%88%EC%99%B8%EC%B2%98%EB%A6%AC\",\n    \"aria-label\": \" 간단한 예외처리 permalink\",\n    className: \"anchor-header before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"🙂 간단한 예외처리\"), \"\\n\", React.createElement(_components.p, null, \"예외처리에서도 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">goto</code>\"\n    }\n  }), \"는 많이 사용된다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token comment\\\">// in _cpu_down:</span>\\n\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>st<span class=\\\"token operator\\\">-></span>state <span class=\\\"token operator\\\">></span> CPUHP_TEARDOWN_CPU<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    st<span class=\\\"token operator\\\">-></span>target <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">max</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span><span class=\\\"token punctuation\\\">)</span>target<span class=\\\"token punctuation\\\">,</span> CPUHP_TEARDOWN_CPU<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    ret <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">cpuhp_kick_ap_work</span><span class=\\\"token punctuation\\\">(</span>cpu<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>ret<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token keyword\\\">goto</span> out<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>st<span class=\\\"token operator\\\">-></span>state <span class=\\\"token operator\\\">></span> CPUHP_TEARDOWN_CPU<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token keyword\\\">goto</span> out<span class=\\\"token punctuation\\\">;</span>\\n\\n    st<span class=\\\"token operator\\\">-></span>target <span class=\\\"token operator\\\">=</span> target<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nret <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">cpuhp_down_callbacks</span><span class=\\\"token punctuation\\\">(</span>cpu<span class=\\\"token punctuation\\\">,</span> st<span class=\\\"token punctuation\\\">,</span> target<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>ret <span class=\\\"token operator\\\">&amp;&amp;</span> st<span class=\\\"token operator\\\">-></span>state <span class=\\\"token operator\\\">&lt;</span> prev_state<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>st<span class=\\\"token operator\\\">-></span>state <span class=\\\"token operator\\\">==</span> CPUHP_TEARDOWN_CPU<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">cpuhp_reset_state</span><span class=\\\"token punctuation\\\">(</span>cpu<span class=\\\"token punctuation\\\">,</span> st<span class=\\\"token punctuation\\\">,</span> prev_state<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token function\\\">__cpuhp_kick_ap</span><span class=\\\"token punctuation\\\">(</span>st<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">WARN</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"DEAD callback error for CPU%d\\\"</span><span class=\\\"token punctuation\\\">,</span> cpu<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nout<span class=\\\"token operator\\\">:</span>\\n    <span class=\\\"token function\\\">cpus_write_unlock</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">lockup_detector_cleanup</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">arch_smt_update</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">cpu_up_down_serialize_trainwrecks</span><span class=\\\"token punctuation\\\">(</span>tasks_frozen<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> ret<span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"이는 linux kernel의 cpu.c 코드에서 에러 처리를 위하여 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">goto</code>\"\n    }\n  }), \"를 사용한 모습이다. \", React.createElement(_components.br), \"\\n\", \"오류를 발생하는 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ret</code>\"\n    }\n  }), \" 변수는 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">_cpu_down</code>\"\n    }\n  }), \" 함수 내에서 할당되고, 처리된다.\"), \"\\n\", React.createElement(_components.p, null, \"따라서, 어떠한 \", React.createElement(_components.strong, null, \"함수 내에서 예외를 처리할 수 있다면\"), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">goto</code>\"\n    }\n  }), \"문을 사용하는 것이 확실하고, 깔끔한 방법 중 하나라는 것을 확인할 수 있다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"-그러면-goto는-어디로든-점프할-수-있나요\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#-%EA%B7%B8%EB%9F%AC%EB%A9%B4-goto%EB%8A%94-%EC%96%B4%EB%94%94%EB%A1%9C%EB%93%A0-%EC%A0%90%ED%94%84%ED%95%A0-%EC%88%98-%EC%9E%88%EB%82%98%EC%9A%94\",\n    \"aria-label\": \" 그러면 goto는 어디로든 점프할 수 있나요 permalink\",\n    className: \"anchor-header before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"😒 그러면 goto는 어디로든 점프할 수 있나요?\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"아니다\"), \". 이것이 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">goto</code>\"\n    }\n  }), \"의 한계라고 할 수 있다. \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">goto</code>\"\n    }\n  }), \"는 일반적으로 한 함수 안에서만 점프할 수 있다. 즉, 다음과 같은 코드는 컴파일 오류를 발생시킨다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">foo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">bar</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nL1<span class=\\\"token operator\\\">:</span>               <span class=\\\"token comment\\\">// useless</span>\\n    <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">bar</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">goto</span> L1<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// 이 함수에는 L1이 없는데?</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">int</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">foo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"이렇게 여러 함수를 옮겨다니기 위해서는 non-local jump인 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">setjmp</code>\"\n    }\n  }), \"와 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">longjmp</code>\"\n    }\n  }), \"를 사용해야만 한다.\"), \"\\n\", React.createElement(_components.p, null, \"즉, \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">goto</code>\"\n    }\n  }), \"로 예외를 처리하기 위해서는 꼭 그 함수 내에서 (다른 errorful한 함수를 호출하지 않고) 처리할 수 있을 정도로 단순한 예외여야 한다. \", React.createElement(_components.br), \"\\n\", \"(물론 nonlocal jump를 쓰더라도 메모리 해제 등등 생각해야 할 것이 많다.)\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"결론-및-세줄요약\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EA%B2%B0%EB%A1%A0-%EB%B0%8F-%EC%84%B8%EC%A4%84%EC%9A%94%EC%95%BD\",\n    \"aria-label\": \"결론 및 세줄요약 permalink\",\n    className: \"anchor-header before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"결론 및 세줄요약\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">goto</code>\"\n    }\n  }), \"는 마냥 나쁜것은 아니다. 대부분의 상황에서는 코드를 지저분하게 만들지만, 특정한 상황에서는 오히려 코드를 보기 좋게 만들 수 있다.\\n따라서, 적재적소에 쓰면서 코드를 짤 필요가 있다.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"웬만해선 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">goto</code>\"\n    }\n  }), \"는 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">if</code>\"\n    }\n  }), \"나 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">for</code>\"\n    }\n  }), \"로 대체될 수 있다.\"), \"\\n\", React.createElement(_components.li, null, \"다중 반복문이나 간단한 예외처리에서는 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">goto</code>\"\n    }\n  }), \"가 더 좋을수도?\"), \"\\n\", React.createElement(_components.li, null, \"근데 non-local jump는 안됨.\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/monognuisy/Code/blog/content/blog/system-prog/goto.mdx\";\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport Utterances from \"../components/Utterances\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport \"katex/dist/katex.min.css\";\nimport TagBox from \"../components/tag\";\nimport Sidenotes from \"../components/sidenotes\";\nimport Toc from \"../components/toc\";\nconst BlogPostTemplate = _ref => {\n  var _data$site$siteMetada;\n  let {data, location, children} = _ref;\n  const post = data.mdx;\n  const siteTitle = ((_data$site$siteMetada = data.site.siteMetadata) === null || _data$site$siteMetada === void 0 ? void 0 : _data$site$siteMetada.title) || \"Title\";\n  const {previous, next} = data;\n  const tags = post.frontmatter.tags;\n  const sidenotes = post.frontmatter.sidenotes;\n  return React.createElement(Layout, {\n    location: location,\n    title: siteTitle\n  }, React.createElement(Seo, {\n    title: post.frontmatter.title,\n    description: post.frontmatter.description || post.excerpt\n  }), React.createElement(Toc, null), React.createElement(\"article\", {\n    className: \"blog-post\",\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", null, React.createElement(\"h1\", {\n    itemProp: \"headline\"\n  }, post.frontmatter.title), React.createElement(\"p\", null, post.frontmatter.date), React.createElement(\"ul\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"flex-start\",\n      listStyle: \"none\",\n      padding: 0\n    }\n  }, tags.map(tag => React.createElement(\"li\", {\n    key: tag,\n    style: {\n      marginRight: \"1rem\"\n    }\n  }, React.createElement(TagBox, {\n    tagName: tag\n  }))))), React.createElement(\"section\", {\n    itemProp: \"articleBody\"\n  }, children), React.createElement(\"hr\", null)), React.createElement(Sidenotes, {\n    sidenotesRecord: sidenotes\n  }), React.createElement(\"nav\", {\n    className: \"blog-post-nav\"\n  }, React.createElement(\"ul\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n      listStyle: \"none\",\n      padding: 0\n    }\n  }, React.createElement(\"li\", null, previous && React.createElement(Link, {\n    to: previous.fields.slug,\n    rel: \"prev\"\n  }, \"\\u2190 \", previous.frontmatter.title)), React.createElement(\"li\", null, next && React.createElement(Link, {\n    to: next.fields.slug,\n    rel: \"next\"\n  }, next.frontmatter.title, \" \\u2192\")))), React.createElement(Utterances, {\n    repo: \"monognuisy/blog\",\n    theme: \"github-light\"\n  }));\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"698757121\";\n","import React, { createRef, useLayoutEffect } from 'react';\nimport \"katex/dist/katex.min.css\"\n\nconst src = 'https://utteranc.es/client.js';\n\nexport interface IUtterancesProps {\n  repo: string;\n  theme: string;\n}\n\nconst Utterances: React.FC<IUtterancesProps> = React.memo(({ repo, theme }) => {\n  const containerRef = createRef<HTMLDivElement>();\n\n  useLayoutEffect(() => {\n    const utterances = document.createElement('script');\n\n    const attributes = {\n      src,\n      repo,\n      theme,\n      'issue-term': 'pathname',\n      label: '✨💬 comments ✨',\n      crossOrigin: 'anonymous',\n      async: 'true',\n    };\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    containerRef.current!.appendChild(utterances);\n  }, [repo]);\n\n  return <div ref={containerRef} className='utterances-wrapper' />;\n});\n\nUtterances.displayName = 'Utterances';\n\nexport default Utterances;","import React, { FC, useEffect, useState } from \"react\"\nimport { graphql, Link, PageProps } from \"gatsby\"\n\ntype sidenotesType = {\n  id: number,\n  content: string\n}\n\ntype sidenotesRecType = {\n  sidenotesRecord: sidenotesType[]\n}\n\nconst Sidenotes = ({ sidenotesRecord }: sidenotesRecType) => {  \n  const [positions, setPositions] = useState([]);\n  const [docElement, setDocElement] = useState([]);\n\n  useEffect(() => {\n    sidenotesRecord?.forEach(e => {\n      const key = e.id;\n      const ele = document.querySelector(`#sn-${key}`);\n      const pos = ele.getBoundingClientRect();\n      const res = pos.top + window.scrollY;\n\n      setPositions((positions) => {\n        return ([...positions, {\n          pos: res,\n          content: e.content,\n      }])});\n\n      setDocElement((elements) => {\n        return ([...elements, ele])\n      });\n\n    })\n  }, [])\n\n  sidenotesRecord?.forEach((e, index) => {\n    if (index < positions.length - 1) {\n      const currpos = positions[index].pos;\n      const nextpos = positions[index + 1].pos;\n      const currheight = (Math.ceil(getByte(e.content) * 7.8 / 269))*(24) - 5;\n\n      if (currpos + currheight >= nextpos) {\n        positions[index + 1].pos = currpos + currheight + 45;\n      }\n    }\n  })\n\n  type positionType = {\n    pos: number,\n    content: string,\n  }\n\n  return (\n    <div className=\"sidenotes-wrapper\">\n      {positions.map((e, index) => {\n        const { pos, content }: positionType = e;\n        const id = `sn-ref-${index + 1}`;\n\n        return (\n          <Note id={index} pos={pos} key={id} elements={docElement}>\n            {content}\n          </Note>\n        )\n      })}\n    </div>\n  )\n}\n\nconst Note = ({ pos, id, elements, children }) => {\n  const [onhover, setOnhover] = useState(false);\n  const [waiter, setWaiter] = useState(false);\n\n  const primaryHColor = `#fff9db`;\n  const dimmedHColor = `#ffdc5c`\n\n  const mouseEnter = (i) => {\n    setOnhover(() => true);\n    \n    elements[i].style.backgroundColor = dimmedHColor\n  }\n\n  const mouseLeave = (i) => {\n    setOnhover(() => false);\n\n    if (!waiter) {\n      elements[i].style.backgroundColor = primaryHColor\n    }\n  }\n\n  const mouseClick = (i) => {\n    console.log(i);\n\n    elements[i].style.backgroundColor = dimmedHColor\n    setWaiter(() => true);\n\n    setTimeout(() => setWaiter(false), 1000);\n    setTimeout(() => (elements[i].style.backgroundColor = primaryHColor), 1000);\n  }\n\n\n  const sidenoteStyle = {\n    top: 0,\n    position: `absolute`, \n    boxShadow: `rgba(0, 0, 0, 0.01) 0px 6px 24px 0px, rgba(0, 0, 0, 0.08) 0px 0px 0px 1px`,\n    padding: `10px`,\n    maxWidth: `300px`,\n    width: `100%`,\n    borderRadius: `5px`,  \n    textDecoration: `none`,\n    color: `#2e353f`,\n    backgroundColor: onhover ? `#eeeeee` : `#ffffff`,\n    display: `block`,\n    transition: `0.2s`,\n  }\n\n  return (\n    <Link \n      className=\"sn-ref\"\n      style={{\n        ...sidenoteStyle,\n        top: pos,\n      }} \n      id={`sn-ref-${id + 1}`}\n      onMouseEnter={() => mouseEnter(id)}\n      onMouseLeave={() => mouseLeave(id)}\n      onClick={() => mouseClick(id)}\n      to={`./#sn-${id + 1}`}>\n      <span>\n        {children}\n      </span>\n    </Link>\n  )\n}\n\nconst getByte = (str) => {\n  return str\n    .split('') \n    .map(s => s.charCodeAt(0))\n    .reduce((prev, c) => (prev + ((c === 10) ? 1.8 : ((c >> 7) ? 1.8 : 1))), 0);\n}\n\nexport default Sidenotes","import React, { FC } from \"react\"\nimport { graphql, PageProps } from \"gatsby\"\n\nconst Toc = () => {\n  return <div className=\"toc-wrapper\"></div>\n}\n\nexport default Toc","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","a","span","p","h3","strong","br","ol","li","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","BlogPostTemplate","_ref","_data$site$siteMetada","data","location","children","post","mdx","siteTitle","site","siteMetadata","title","previous","next","tags","frontmatter","sidenotes","Layout","Seo","description","excerpt","Toc","itemScope","itemType","itemProp","date","display","flexWrap","justifyContent","listStyle","padding","map","tag","key","marginRight","TagBox","tagName","Sidenotes","sidenotesRecord","Link","to","fields","slug","rel","Utterances","repo","theme","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","containerRef","createRef","useLayoutEffect","utterances","document","createElement","attributes","src","label","crossOrigin","async","entries","forEach","_ref2","value","setAttribute","current","appendChild","ref","displayName","Note","pos","elements","onhover","setOnhover","useState","waiter","setWaiter","primaryHColor","dimmedHColor","sidenoteStyle","top","boxShadow","maxWidth","width","borderRadius","textDecoration","color","backgroundColor","transition","onMouseEnter","mouseEnter","i","onMouseLeave","mouseLeave","onClick","mouseClick","console","log","setTimeout","getByte","str","split","s","charCodeAt","reduce","prev","c","positions","setPositions","docElement","setDocElement","useEffect","e","ele","querySelector","res","getBoundingClientRect","window","scrollY","concat","_toConsumableArray","content","index","length","currpos","nextpos","currheight","Math","ceil","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}