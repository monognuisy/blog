{"version":3,"file":"component---src-templates-tags-post-tsx-b9e78d5052f1ec24b6e6.js","mappings":"yKAsFA,UAhFaA,IAA2B,IAA1B,YAAEC,EAAW,KAAEC,GAAMF,EACjC,MAAM,IAAEG,GAAQF,GACV,MAAEG,EAAK,WAAEC,GAAeH,EAAKI,OAC7BC,EAAeF,EAAU,SACd,IAAfA,EAAmB,GAAK,KAAG,iBACZF,EAAG,IAEpB,OACEK,EAAAA,cAAA,OAAKC,UAAU,sBACZC,EAAAA,EACDF,EAAAA,cAAA,OAAKC,UAAU,kBACbD,EAAAA,cAAA,YAEEA,EAAAA,cAAA,UAAKD,GACLC,EAAAA,cAAA,MAAIG,MAAO,CAAEC,UAAW,SACrBR,EAAMS,KAAIC,IAAc,IAAb,KAAEC,GAAMD,EAClB,MAAM,KAAEE,GAASD,EAAKE,QAChB,MAAEC,GAAUH,EAAKI,YAEvB,OADAC,QAAQC,IAAIN,GAEVP,EAAAA,cAAA,MAAIc,IAAKN,GACPR,EAAAA,cAAA,WACEC,UAAU,iBACVc,WAAS,EACTC,SAAS,6BAEThB,EAAAA,cAAA,cACEA,EAAAA,cAAA,UACEA,EAAAA,cAACiB,EAAAA,KAAI,CAACC,GAAIV,EAAMW,SAAS,OACvBnB,EAAAA,cAAA,QAAMmB,SAAS,YAAYT,KAG/BV,EAAAA,cAAA,aAAQO,EAAKI,YAAYS,OAE3BpB,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACEqB,wBAAyB,CACvBC,OAAQf,EAAKI,YAAYY,aAAehB,EAAKiB,SAE/CL,SAAS,kBAIZ,KAQXnB,EAAAA,cAACiB,EAAAA,KAAI,CAACC,GAAG,SAAQ,gBAGpBO,EAAAA,EACG,C","sources":["webpack://gatsby-starter-blog/./src/templates/tags-post.tsx"],"sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n// Components\nimport { Link, graphql } from \"gatsby\"\nimport { blogFooter, blogHeader } from \"../components/staticObjects\"\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMdx\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`\n\n  return (\n    <div className=\"most-outer-wrapper\">\n      {blogHeader}\n      <div className=\"global-wrapper\">\n        <main>\n          \n          <h1>{tagHeader}</h1>\n          <ol style={{ listStyle: `none`}}>\n            {edges.map(({ node }) => {\n              const { slug } = node.fields\n              const { title } = node.frontmatter\n              console.log(node)\n              return (\n                <li key={slug}>\n                  <article\n                    className=\"post-list-item\"\n                    itemScope\n                    itemType=\"http://schema.org/Article\"\n                  >\n                    <header>\n                      <h2>\n                        <Link to={slug} itemProp=\"url\">\n                          <span itemProp=\"headline\">{title}</span>\n                        </Link>\n                      </h2>\n                      <small>{node.frontmatter.date}</small>\n                    </header>\n                    <section>\n                      <p\n                        dangerouslySetInnerHTML={{\n                          __html: node.frontmatter.description || node.excerpt,\n                        }}\n                        itemProp=\"description\"\n                      />\n                    </section>\n                  </article>\n                </li>\n              )\n            })}\n          </ol>\n          {/*\n                  This links to a page that does not yet exist.\n                  You'll come back to it!\n                */}\n          <Link to=\"/tags\">â†‘ All tags</Link>\n        </main>\n      </div>\n      {blogFooter}\n    </div>\n  )\n}\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMdx: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\nexport default Tags\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMdx(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["_ref","pageContext","data","tag","edges","totalCount","allMdx","tagHeader","React","className","blogHeader","style","listStyle","map","_ref2","node","slug","fields","title","frontmatter","console","log","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","blogFooter"],"sourceRoot":""}