{"version":3,"file":"component---src-templates-blog-post-tsx-content-file-path-home-monognuisy-code-blog-content-blog-system-prog-rlrule-mdx-68241a737989dda6c2a9.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/utils/blogUtils.tsx","webpack://gatsby-starter-blog/./content/blog/system-prog/rlrule.mdx","webpack://gatsby-starter-blog/./src/templates/blog-post.tsx","webpack://gatsby-starter-blog/./src/components/Utterances.tsx","webpack://gatsby-starter-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import * as React from \"react\"\nimport ogs from \"open-graph-scraper\"\n\nexport const LinkBox = ({ urlValue }) => {\n  // const ogs = require(\"open-graph-scraper\")\n  // const options = { url: `http://ogp.me/` }\n  // ogs(options).then(data => {\n  //   const { error, result, response } = data\n  //   console.log(\"error:\", error) // This returns true or false. True if there was an error. The error itself is inside the results object.\n  //   console.log(\"result:\", result) // This contains all of the Open Graph results\n  //   console.log(\"response:\", response) // This contains the HTML of page\n  // })\n\n  return <div>{urlValue}</div>\n}\n\nexport const Code = ({ language = \"text\", children }) => {\n  return <code className={`language-` + language}>{children}</code>\n}\n\nexport const textHighlightBlue = {\n  backgroundColor: `#aff0ef`,\n  padding: `3px`,\n  borderRadius: `3px`,\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {textHighlightBlue, Code} from \"../../../src/utils/blogUtils.tsx\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    span: \"span\",\n    strong: \"strong\",\n    h3: \"h3\",\n    br: \"br\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://cseweb.ucsd.edu//~ricko/rt_lt.rule.html\"\n  }, \"C Right-Left Rule (Rick Ord’s CSE 30 - UC San Diego)\"), \"\\n를 참고하였습니다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"right-to-left-rule\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#right-to-left-rule\",\n    \"aria-label\": \"right to left rule permalink\",\n    className: \"anchor-header before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Right to Left rule\"), \"\\n\", React.createElement(_components.p, null, \"C는 type이 굉장히 복잡한 언어이다. 이는 포인터(pointer), 배열(array), 함수(function)의 합작의 결과인데, 이들이 섞이는 순간 미치게 된다. 예를들어, 다음과 같은 \", React.createElement(_components.strong, null, \"선언\"), \"(Declaration)을 쉽게 해석할 수 있겠는가?\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">int</span> <span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">*</span>fp1<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"쉽지 않다. 저것이 함수 포인터인지, 배열에 대한 포인터인지, 뭔가 많이 섞였는데 어느 순서로 섞였는지 쉽게 파악이 안된다. 그래서, 이를 복호화(decipher) 하는 과정이 필요한데, 이를 Right to Left(이하 RL) rule 이라고 한다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"준비\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%A4%80%EB%B9%84\",\n    \"aria-label\": \"준비 permalink\",\n    className: \"anchor-header before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"준비\"), \"\\n\", React.createElement(_components.p, null, \"앞으로는 영어를 사용하자(??). RL rule은 영어권 사용자를 위해 만들어진 방법으로, 어순이 반대인 한국어로는 이해하기 어렵다. 즉, 한국어 사용자는 다음과 같은 과정을 거쳐야 한다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\">암호같은 C 변수 선언문 <span class=\\\"token operator\\\">--</span><span class=\\\"token operator\\\">--</span><span class=\\\"token operator\\\">></span> RL을 사용하여 영어로 복호화 <span class=\\\"token operator\\\">--</span><span class=\\\"token operator\\\">--</span><span class=\\\"token operator\\\">></span> 그 영문장을 한국어로 번역<span class=\\\"token operator\\\">!</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"영문장을 한국어로 번역하는 과정은 그리 어렵지 않다. 그러면, RL rule에 대해 알아보자.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"rl-rule\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#rl-rule\",\n    \"aria-label\": \"rl rule permalink\",\n    className: \"anchor-header before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"RL rule\"), \"\\n\", React.createElement(_components.p, null, \"변수의 선언에서 다음 기호를 \", React.createElement(_components.strong, null, \"만나면\"), \", 아래에 표시된 대로 읽는다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token operator\\\">*</span>            <span class=\\\"token string\\\">\\\"pointer to\\\"</span>                 번역하면 <span class=\\\"token string\\\">\\\"~의 포인터\\\"</span>\\n<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>           <span class=\\\"token string\\\">\\\"array of\\\"</span>                   번역하면 <span class=\\\"token string\\\">\\\"~의 배열\\\"</span>\\n<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>           <span class=\\\"token string\\\">\\\"function returning\\\"</span>         번역하면 <span class=\\\"token string\\\">\\\"~를 반환하는 함수\\\"</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"일단은 영어로 읽기로 하자. 그럼, 어떻게 기호를 \", React.createElement(_components.strong, null, \"만날까\"), \"? \", React.createElement(_components.br), \"\\n\", \"다음과 같은 순서를 따른다.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(\"span\", {\n    style: textHighlightBlue\n  }, React.createElement(_components.strong, null, \"식별자\"), \"를 찾는다.\"), \"\\n\", React.createElement(_components.p, null, \"식별자(identifier)는 변수의 이름으로, 유일하다. 여기가 출발점이다. 그러면,\\n문장을 다음과 같이 시작하면 된다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\">식별자 is <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span></code></pre></div>\"\n    }\n  }), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(\"span\", {\n    style: textHighlightBlue\n  }, React.createElement(_components.strong, null, \"오른쪽으로 이동!\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"식별자로부터 오른쪽으로 이동할 수 있을 때까지 오른쪽으로 이동하면서 기호를 읽는다. 즉,\\n만일 식별자 오른쪽에 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">[]</code>\"\n    }\n  }), \"가 있다면 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">식별자 is array of ...</code>\"\n    }\n  }), \" 으로 읽으면 된다.\"), \"\\n\", React.createElement(_components.li, null, \"만일, \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">(</code>\"\n    }\n  }), \"를 만난다면, 그것은 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">()</code>\"\n    }\n  }), \"의 일부분일 것이다. 즉, \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">()</code>\"\n    }\n  }), \" 전체를\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">식별자 is function returning ...</code>\"\n    }\n  }), \" 이라고 읽고 넘어가면 된다. - 하지만, \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">(</code>\"\n    }\n  }), \"\\n를 만나지 않고 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">)</code>\"\n    }\n  }), \" 만 만난다면, 그것은 함수의 괄호가 아닌 다른 괄호의 닫는\\n괄호이다. 즉, 오른쪽으로 이동하는 것을 \", React.createElement(_components.strong, null, \"멈춰야 한다\"), \".\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(\"span\", {\n    style: textHighlightBlue\n  }, React.createElement(_components.strong, null, \"왼쪽으로 이동!\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"오른쪽으로 가기를 멈췄다면, 식별자로부터 왼쪽으로 이동할 수 있을 때까지 왼쪽으로 이동하면서 기호를 읽는다. 즉, 왼쪽에 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">*</code>\"\n    }\n  }), \"가 있다면 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">식별자 is pointer to ...</code>\"\n    }\n  }), \" 으로 읽으면 된다.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">(</code>\"\n    }\n  }), \" 는 여는 괄호이므로, 만난다면 멈춘다.\"), \"\\n\", React.createElement(_components.li, null, \"만일 멈춘 후, 오른쪽으로 갈 수 있다면 다시 오른쪽으로 간다 (오른쪽 가다가 멈췄던 곳 부터).\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"예시\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%98%88%EC%8B%9C\",\n    \"aria-label\": \"예시 permalink\",\n    className: \"anchor-header before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"예시\"), \"\\n\", React.createElement(_components.p, null, \"간단하게, 다음을 읽어보자.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">int</span> <span class=\\\"token operator\\\">*</span>p<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"(배열 포인터인지 포인터 배열인지 헷갈린다면, 꼭 아래의 해설을 천천히 따라가보자!)\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"식별자 찾기\")), \"\\n\", React.createElement(_components.p, null, \"식별자는 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">p</code>\"\n    }\n  }), \"이다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">int</span> <span class=\\\"token operator\\\">*</span>p<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n     <span class=\\\"token operator\\\">^</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"즉, \", React.createElement(Code, null, \"“\", React.createElement(_components.strong, null, \"p is\"), \"”\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"오른쪽으로 이동!\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"오른쪽으로 이동한다. \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">[]</code>\"\n    }\n  }), \"가 보인다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">int</span> <span class=\\\"token operator\\\">*</span>p<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token operator\\\">^</span><span class=\\\"token operator\\\">^</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"즉, \", React.createElement(Code, null, \"“p is \", React.createElement(_components.strong, null, \"array of\"), \"”\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"더 이상 오른쪽으로 갈 수 없다. (세미콜론이 있기 때문) 따라서 멈추고, 다음 단계를 따른다.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"왼쪽으로 이동!\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"왼쪽으로 이동한다. \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">*</code>\"\n    }\n  }), \"가 보인다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">int</span> <span class=\\\"token operator\\\">*</span>p<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token operator\\\">^</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"즉, \", React.createElement(Code, null, \"“p is array of \", React.createElement(_components.strong, null, \"pointer to\"), \"”\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"왼쪽으로 이동한다. \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">int</code>\"\n    }\n  }), \"가 보인다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">int</span> <span class=\\\"token operator\\\">*</span>p<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token operator\\\">^</span><span class=\\\"token operator\\\">^</span><span class=\\\"token operator\\\">^</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"즉, \", React.createElement(Code, null, \"“p is array of pointer to \", React.createElement(_components.strong, null, \"int\"), \"”\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"더 이상 왼쪽으로 이동할 수 없고, 오른쪽으로도 갈 수 없다. 종료.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"즉, 답은 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">p is array of pointer to int</code>\"\n    }\n  }), \" 가 된다. 쉽지 않은가?\"), \"\\n\", React.createElement(_components.p, null, \"조금 더 복잡한 예제를 풀어보자.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">int</span> <span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">*</span><span class=\\\"token function\\\">func</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"식별자 찾기\")), \"\\n\", React.createElement(_components.p, null, \"식별자는 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">func</code>\"\n    }\n  }), \" 이다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">int</span> <span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">*</span><span class=\\\"token function\\\">func</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n       <span class=\\\"token operator\\\">^</span><span class=\\\"token operator\\\">^</span><span class=\\\"token operator\\\">^</span><span class=\\\"token operator\\\">^</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"즉, \", React.createElement(Code, null, \"“\", React.createElement(_components.strong, null, \"func is\"), \"”\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"오른쪽으로 이동!\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"한 번 이동하면 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">()</code>\"\n    }\n  }), \"가 나온다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">int</span> <span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">*</span><span class=\\\"token function\\\">func</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n           <span class=\\\"token operator\\\">^</span><span class=\\\"token operator\\\">^</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"즉, \", React.createElement(Code, null, \"“func is \", React.createElement(_components.strong, null, \"function returning\"), \"”\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"오른쪽이 닫는 괄호 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">)</code>\"\n    }\n  }), \" 로 막혀있다. 즉, 왼쪽으로 이동한다.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"왼쪽으로 이동!\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"식별자 왼쪽에 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">*</code>\"\n    }\n  }), \"가 있다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">int</span> <span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">*</span><span class=\\\"token function\\\">func</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token operator\\\">^</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"즉, \", React.createElement(Code, null, \"“func is function returning \", React.createElement(_components.strong, null, \"pointer to\"), \"”\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"왼쪽이 여는 괄호 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">(</code>\"\n    }\n  }), \" 로 막혀있다. 따라서 다시 오른쪽으로 간다.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"오른쪽으로 이동!\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"앞서 멈춘 쪽에서 오른쪽으로 가면 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">()</code>\"\n    }\n  }), \"가 나온다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">int</span> <span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">*</span><span class=\\\"token function\\\">func</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n              <span class=\\\"token operator\\\">^</span><span class=\\\"token operator\\\">^</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"즉, \", React.createElement(Code, null, \"“func is function returning pointer to \", React.createElement(_components.strong, null, \"function returning\"), \"”\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">;</code>\"\n    }\n  }), \"에 의해 막히므로 다시 왼쪽으로 간다.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"왼쪽으로 이동!\")), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"앞서 멈춘 쪽에서 왼쪽으로 가면 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">*</code>\"\n    }\n  }), \"가 나온다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">int</span> <span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">*</span><span class=\\\"token function\\\">func</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token operator\\\">^</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"즉, \", React.createElement(Code, null, \"“func is function returning pointer to function returning \", React.createElement(_components.strong, null, \"pointer to\"), \"”\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"한번 더 가면 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">int</code>\"\n    }\n  }), \"가 나온다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">int</span> <span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">*</span><span class=\\\"token function\\\">func</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token operator\\\">^</span><span class=\\\"token operator\\\">^</span><span class=\\\"token operator\\\">^</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"즉, \", React.createElement(Code, null, \"“func is function returning pointer to function returning pointer to \", React.createElement(_components.strong, null, \"int\"), \"”\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"더이상 갈 수 없으므로 종료.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"따라서 답은 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">“func is function returning pointer to function returning pointer to int”</code>\"\n    }\n  }), \" 이다. \", React.createElement(_components.br), \"\\n\", \"복잡하지만, 충분히 할만한 작업이다.\"), \"\\n\", React.createElement(_components.p, null, \"만일 배열의 크기가 주어진다면, (\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">[3]</code>\"\n    }\n  }), \"과 같이) \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">“array (size 3) of ...”</code>\"\n    }\n  }), \" 과 같이 해석하면 될 것이고, \", React.createElement(_components.br), \"\\n\", \"함수의 매개변수가 주어진다면, (\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">(char *, int)</code>\"\n    }\n  }), \"와 같이)\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">“function expecting (char *, int) returning ...”</code>\"\n    }\n  }), \" 으로 해석하면 될 것이다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"번역\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EB%B2%88%EC%97%AD\",\n    \"aria-label\": \"번역 permalink\",\n    className: \"anchor-header before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"번역\"), \"\\n\", React.createElement(_components.p, null, \"어렵지 않다. 영어니까 뒤에서부터 해석하면 되는 것이다. 즉,\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">int</span> <span class=\\\"token operator\\\">*</span>p<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"는 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">“p is array of pointer to int”</code>\"\n    }\n  }), \" 이므로, \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">“p는 int의 포인터의 배열이다”</code>\"\n    }\n  }), \" 라고 말하면 된다.\"), \"\\n\", React.createElement(_components.p, null, \"마찬가지로\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">int</span> <span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">*</span><span class=\\\"token function\\\">func</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"는 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">“func is function returning pointer to function returning pointer to int”</code>\"\n    }\n  }), \" 이므로,\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">”func는 int의 포인터를 반환하는 함수의 포인터를 반환하는 함수”</code>\"\n    }\n  }), \" 가 된다.\"), \"\\n\", React.createElement(_components.p, null, \"그렇다면, 맨 처음 나온 이것은?\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">int</span> <span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">*</span>fp1<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">“fp1 is pointer to function expecting (int) returning pointer to array (size 10) of pointer to int”</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.p, null, \"번역하면,\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">“fp1은 int의 포인터의 (크기가 10인) 배열의 포인터를 반환하는 (int를 매개변수로 가지는) 함수의 포인터”</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.h3, {\n    id: \"주의\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%A3%BC%EC%9D%98\",\n    \"aria-label\": \"주의 permalink\",\n    className: \"anchor-header before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"주의!\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"다른-것은-다르다\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EB%8B%A4%EB%A5%B8-%EA%B2%83%EC%9D%80-%EB%8B%A4%EB%A5%B4%EB%8B%A4\",\n    \"aria-label\": \"다른 것은 다르다 permalink\",\n    className: \"anchor-header before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"다른 것은 다르다.\"), \"\\n\", React.createElement(_components.p, null, \"일단, 이 해석 방법에서는 포인터, 배열, 함수를 \", React.createElement(_components.strong, null, \"다르게\"), \" 보고 있다. 즉, 배열 == 포인터나, 함수 == 포인터 이렇게 생각하면 절대로 안된다는 것이다.\"), \"\\n\", React.createElement(_components.p, null, \"일단 RL로 해석한 다음, 그 뒤에 나름의 논리와 주관을 섞어서 같게 봐야 한다.\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"되는-것과-되지-않는-것\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EB%90%98%EB%8A%94-%EA%B2%83%EA%B3%BC-%EB%90%98%EC%A7%80-%EC%95%8A%EB%8A%94-%EA%B2%83\",\n    \"aria-label\": \"되는 것과 되지 않는 것 permalink\",\n    className: \"anchor-header before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"되는 것과 되지 않는 것\"), \"\\n\", React.createElement(_components.p, null, \"다음과 같은 것은 C에서 허용하지 않는다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">[]()</code>\"\n    }\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"array of function\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">()()</code>\"\n    }\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"function returning function\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">()[]</code>\"\n    }\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"function returning array of …\"), \"\\n\", React.createElement(_components.li, null, \"즉, 배열을 반환할 수는 없다는 것.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"typedef와의-관계\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#typedef%EC%99%80%EC%9D%98-%EA%B4%80%EA%B3%84\",\n    \"aria-label\": \"typedef와의 관계 permalink\",\n    className: \"anchor-header before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"typedef와의 관계\"), \"\\n\", React.createElement(_components.p, null, \"이렇게 이상한 변수의 선언을 읽는 방법을 알아봤다. 이는 사실 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">typedef</code>\"\n    }\n  }), \"를 해석하는 데에도 유용하다.\"), \"\\n\", React.createElement(_components.p, null, \"아마 대다수의 책에서 typedef에 대해 잘못 설명한다. 다음과 같이 말이다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">typedef</span> <span class=\\\"token operator\\\">&lt;</span>원래 타입<span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span>새로운 타입<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"이는 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">typedef int pid_t;</code>\"\n    }\n  }), \" 와 같이 맞는 것 같지만, 사실 그렇지 않다는 것은 다음만 봐도 알 수 있다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">typedef</span> <span class=\\\"token keyword\\\">char</span> u24<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"(?? 이게 뭐임)\"), \"\\n\", React.createElement(_components.p, null, \"이렇게 보면 함수 포인터의 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">typedef</code>\"\n    }\n  }), \"도 이상하다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">typedef</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">*</span><span class=\\\"token class-name\\\">sighandler_t</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, {\n    id: \"올바른-설명\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%98%AC%EB%B0%94%EB%A5%B8-%EC%84%A4%EB%AA%85\",\n    \"aria-label\": \"올바른 설명 permalink\",\n    className: \"anchor-header before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"올바른 설명\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">typedef</code>\"\n    }\n  }), \"에 대한 올바른 설명은 다음과 같다.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">typedef</span> <span class=\\\"token operator\\\">&lt;</span>타입의 선언<span class=\\\"token operator\\\">></span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"여기서, \", React.createElement(_components.strong, null, \"타입의 선언\"), \"이라는 것은 \", React.createElement(_components.strong, null, \"식별자(identifier)로 새로운 타입\"), \"이 온다는 것이다.\"), \"\\n\", React.createElement(_components.p, null, \"식별자가 타입이 되었다는 것을 제외하면, 앞서 봤던 변수의 선언과 별 다를 것이 없다. 예를 들어서 다음을 해석해보자.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">typedef</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">*</span><span class=\\\"token class-name\\\">sighandler_t</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"똑같이 RL rule을 적용하면,\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">“sighandler_t is pointer to function expecting (int) returning void“</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.p, null, \"대신, 중간에 이것이 \", React.createElement(_components.strong, null, \"타입\"), \"이라는 것을 알려주는 말을 넣으면 된다.\"), \"\\n\", React.createElement(Code, null, \"“sighandler_t is \", React.createElement(_components.strong, null, \"type which is\"), \" pointer to function expecting (int) returning void“\"), \"\\n\", React.createElement(_components.p, null, \"한국어로 번역하면,\"), \"\\n\", React.createElement(Code, null, \"“sighandler_t는 void를 반환하는 (int를 매개변수로 하는) 함수의 포인터\", React.createElement(_components.strong, null, \"를 나타내는 타입이다\"), \"”\"), \"\\n\", React.createElement(_components.p, null, \"라고 할 수 있겠다.\"), \"\\n\", React.createElement(_components.p, null, \"마찬가지로\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">typedef</span> <span class=\\\"token keyword\\\">char</span> u24<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"은 다음과 같다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">“u24 is type which is array (size 3) of char”</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.p, null, \"즉, \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">“u24는 char의 (크기가 3인) 배열을 나타내는 타입이다”</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.h4, {\n    id: \"아니-이런게-어디에-쓰임\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%95%84%EB%8B%88-%EC%9D%B4%EB%9F%B0%EA%B2%8C-%EC%96%B4%EB%94%94%EC%97%90-%EC%93%B0%EC%9E%84\",\n    \"aria-label\": \"아니 이런게 어디에 쓰임 permalink\",\n    className: \"anchor-header before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"아니 이런게 어디에 쓰임…\"), \"\\n\", React.createElement(_components.p, null, \"실제로 쓰인다. glibc의 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">setjmp.h</code>\"\n    }\n  }), \" 를 살펴보면 다음과 같은 구절(?)이 있다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://sites.uclouvain.be/SystInfo/usr/include/setjmp.h.html\"\n  }, \"setjmp.h\")), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">typedef</span> <span class=\\\"token keyword\\\">struct</span> <span class=\\\"token class-name\\\">__jmp_buf_tag</span> jmp_buf<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"즉, nonlocal jump시 필요한 type인 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">jmp_buf</code>\"\n    }\n  }), \"는 사실, \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">“구조체 __jmp_buf_tag의 (크기가 1인) 배열”</code>\"\n    }\n  }), \" 이다. 따라서, \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">setjmp</code>\"\n    }\n  }), \"시에 인자로 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">&amp;jmp_buf</code>\"\n    }\n  }), \"가 아닌, 그냥 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">jmp_buf</code>\"\n    }\n  }), \" 를 넘겨주어도 되는 것이다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"오\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%98%A4\",\n    \"aria-label\": \"오 permalink\",\n    className: \"anchor-header before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"오…\"), \"\\n\", React.createElement(_components.p, null, \"이렇게 보면 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">typedef</code>\"\n    }\n  }), \", 괜찮지 않은가? RL rule만 완벽히 터득하면 오히려 직관적이라는 느낌까지 든다.\"), \"\\n\", React.createElement(_components.p, null, \"근데, 이렇게 선언과 동일한 문법을 쓸 것이면, \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">typedec</code>\"\n    }\n  }), \"로 이름을 지었으면 더 좋았을 것이라는 생각이 든다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"또-다른-팁\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EB%98%90-%EB%8B%A4%EB%A5%B8-%ED%8C%81\",\n    \"aria-label\": \"또 다른 팁 permalink\",\n    className: \"anchor-header before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"또 다른 팁\"), \"\\n\", React.createElement(_components.p, null, \"사실 이 RL rule은 constant pointer 등의 해석에도 도움이 된다. 다음의 예시를 보자.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token keyword\\\">int</span> <span class=\\\"token operator\\\">*</span>p<span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">“p is pointer to const int”</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">int</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">const</span> p<span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">“p is constant pointer to int”</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.p, null, \"ㅇㅎ이\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/monognuisy/Code/blog/content/blog/system-prog/rlrule.mdx\";\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport Utterances from \"../components/Utterances\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport \"katex/dist/katex.min.css\";\nimport TagBox from \"../components/tag\";\nconst BlogPostTemplate = _ref => {\n  var _data$site$siteMetada;\n  let {data, location, children} = _ref;\n  const post = data.mdx;\n  const siteTitle = ((_data$site$siteMetada = data.site.siteMetadata) === null || _data$site$siteMetada === void 0 ? void 0 : _data$site$siteMetada.title) || \"Title\";\n  const {previous, next} = data;\n  const tags = post.frontmatter.tags;\n  return React.createElement(Layout, {\n    location: location,\n    title: siteTitle\n  }, React.createElement(Seo, {\n    title: post.frontmatter.title,\n    description: post.frontmatter.description || post.excerpt\n  }), React.createElement(\"article\", {\n    className: \"blog-post\",\n    itemScope: true,\n    itemType: \"http://schema.org/Article\"\n  }, React.createElement(\"header\", null, React.createElement(\"h1\", {\n    itemProp: \"headline\"\n  }, post.frontmatter.title), React.createElement(\"p\", null, post.frontmatter.date), React.createElement(\"ul\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"flex-start\",\n      listStyle: \"none\",\n      padding: 0\n    }\n  }, tags.map(tag => React.createElement(\"li\", {\n    key: tag,\n    style: {\n      marginRight: \"1rem\"\n    }\n  }, React.createElement(TagBox, {\n    tagName: tag\n  }))))), React.createElement(\"section\", {\n    itemProp: \"articleBody\"\n  }, children), React.createElement(\"hr\", null)), React.createElement(\"nav\", {\n    className: \"blog-post-nav\"\n  }, React.createElement(\"ul\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n      listStyle: \"none\",\n      padding: 0\n    }\n  }, React.createElement(\"li\", null, previous && React.createElement(Link, {\n    to: previous.fields.slug,\n    rel: \"prev\"\n  }, \"\\u2190 \", previous.frontmatter.title)), React.createElement(\"li\", null, next && React.createElement(Link, {\n    to: next.fields.slug,\n    rel: \"next\"\n  }, next.frontmatter.title, \" \\u2192\")))), React.createElement(Utterances, {\n    repo: \"monognuisy/blog\",\n    theme: \"github-light\"\n  }));\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst pageQuery = \"4225206984\";\n","import React, { createRef, useLayoutEffect } from 'react';\nimport \"katex/dist/katex.min.css\"\n\nconst src = 'https://utteranc.es/client.js';\n\nexport interface IUtterancesProps {\n  repo: string;\n  theme: string;\n}\n\nconst Utterances: React.FC<IUtterancesProps> = React.memo(({ repo, theme }) => {\n  const containerRef = createRef<HTMLDivElement>();\n\n  useLayoutEffect(() => {\n    const utterances = document.createElement('script');\n\n    const attributes = {\n      src,\n      repo,\n      theme,\n      'issue-term': 'pathname',\n      label: '✨💬 comments ✨',\n      crossOrigin: 'anonymous',\n      async: 'true',\n    };\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    containerRef.current!.appendChild(utterances);\n  }, [repo]);\n\n  return <div ref={containerRef} />;\n});\n\nUtterances.displayName = 'Utterances';\n\nexport default Utterances;","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["Code","_ref2","language","children","React","className","textHighlightBlue","backgroundColor","padding","borderRadius","_createMdxContent","props","_components","Object","assign","p","a","h2","span","strong","h3","br","ol","li","ul","h4","_provideComponents","components","href","id","style","position","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","BlogPostTemplate","_ref","_data$site$siteMetada","data","location","post","mdx","siteTitle","site","siteMetadata","title","previous","next","tags","frontmatter","Layout","Seo","description","excerpt","itemScope","itemType","itemProp","date","display","flexWrap","justifyContent","listStyle","map","tag","key","marginRight","TagBox","tagName","Link","to","fields","slug","rel","Utterances","repo","theme","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","containerRef","createRef","useLayoutEffect","utterances","document","createElement","attributes","src","label","crossOrigin","async","entries","forEach","value","setAttribute","current","appendChild","ref","displayName","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}