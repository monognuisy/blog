{"version":3,"file":"component---src-templates-blog-post-tsx-91775eb6122c7656eec4.js","mappings":"oMAqFA,UA3EyB,SAAH,GAAgC,MAA1BA,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SAC1BC,EAAOF,EAAKG,eACZC,GAAkC,QAAtB,EAAAJ,EAAKK,KAAKC,oBAAY,aAAtBC,EAAwBC,QAAK,QACvCC,EAAmBT,EAAnBS,SAAUC,EAASV,EAATU,KACZC,EAAOT,EAAKU,YAAYD,KAE9B,OACEE,EAAAA,cAACC,EAAAA,EAAM,CAACb,SAAUA,EAAUO,MAAOJ,GACjCS,EAAAA,cAACE,EAAAA,EAAG,CACFP,MAAON,EAAKU,YAAYJ,MACxBQ,YAAad,EAAKU,YAAYI,aAAed,EAAKe,UAEpDJ,EAAAA,cAAAA,UAAAA,CACEK,UAAU,YACVC,WAAS,EACTC,SAAS,6BAETP,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAAAA,KAAAA,CAAIQ,SAAS,YAAYnB,EAAKU,YAAYJ,OAC1CK,EAAAA,cAAAA,IAAAA,KAAIX,EAAKU,YAAYU,MACrBT,EAAAA,cAAAA,KAAAA,CACEU,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,aAChBC,UAAW,OACXC,QAAS,IAGVjB,EAAKkB,KAAI,SAAAC,GAAG,OACXjB,EAAAA,cAAAA,KAAAA,CAAIkB,IAAKD,EAAKP,MAAO,CAAES,YAAa,SAClCnB,EAAAA,cAACoB,EAAAA,EAAM,CAACC,QAASJ,IACd,MAIXjB,EAAAA,cAAAA,UAAAA,CACEsB,wBAAyB,CAAEC,OAAQlC,EAAKmC,MACxChB,SAAS,gBAEXR,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAACyB,EAAAA,EAAG,QAGRzB,EAAAA,cAAAA,MAAAA,CAAKK,UAAU,iBACbL,EAAAA,cAAAA,KAAAA,CACEU,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGXf,EAAAA,cAAAA,KAAAA,KACGJ,GACCI,EAAAA,cAAC0B,EAAAA,KAAI,CAACC,GAAI/B,EAASgC,OAAOC,KAAMC,IAAI,QAAM,KACrClC,EAASG,YAAYJ,QAI9BK,EAAAA,cAAAA,KAAAA,KACGH,GACCG,EAAAA,cAAC0B,EAAAA,KAAI,CAACC,GAAI9B,EAAK+B,OAAOC,KAAMC,IAAI,QAC7BjC,EAAKE,YAAYJ,MAAK,SAQvC,C","sources":["webpack://gatsby-starter-blog/./src/templates/blog-post.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nimport \"katex/dist/katex.min.css\"\nimport TagBox from \"../components/tag\"\n\nconst BlogPostTemplate = ({ data, location }: any) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n  const tags = post.frontmatter.tags\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `flex-start`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            {tags.map(tag => (\n              <li key={tag} style={{ marginRight: `1rem` }}>\n                <TagBox tagName={tag} />\n              </li>\n            ))}\n          </ul>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      tableOfContents\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["data","location","post","markdownRemark","siteTitle","site","siteMetadata","_data$site$siteMetada","title","previous","next","tags","frontmatter","React","Layout","Seo","description","excerpt","className","itemScope","itemType","itemProp","date","style","display","flexWrap","justifyContent","listStyle","padding","map","tag","key","marginRight","TagBox","tagName","dangerouslySetInnerHTML","__html","html","Bio","Link","to","fields","slug","rel"],"sourceRoot":""}