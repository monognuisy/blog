{"version":3,"file":"component---src-pages-index-tsx-bdec28915809e155a5c5.js","mappings":"4LAiHA,UAlFkB,SAAH,GAAgC,MAA1BA,EAAQ,EAARA,SACbC,GAA2BC,EAAAA,EAAAA,gBAAe,cAwB1CC,GAAkC,QAAtB,EAAAF,EAAKG,KAAKC,oBAAY,aAAtBC,EAAwBC,QAAK,QACzCC,EAAQP,EAAKQ,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAENC,EAAAA,cAACC,EAAAA,EAAM,CAACb,SAAUA,EAAUO,MAAOJ,GACjCS,EAAAA,cAACE,EAAAA,EAAG,CAACP,MAAM,cACXK,EAAAA,cAACG,EAAAA,EAAG,MACJH,EAAAA,cAAAA,IAAAA,KAAAA,8JAUJA,EAAAA,cAACC,EAAAA,EAAM,CAACb,SAAUA,EAAUO,MAAOJ,GACjCS,EAAAA,cAACE,EAAAA,EAAG,CAACP,MAAM,cACXK,EAAAA,cAACG,EAAAA,EAAG,MACJH,EAAAA,cAAAA,KAAAA,CAAII,MAAO,CAAEC,UAAW,SACrBT,EAAMU,KAAI,SAAAC,GACT,IAAMZ,EAAQY,EAAKC,YAAYb,OAASY,EAAKE,OAAOC,KAEpD,OACEV,EAAAA,cAAAA,KAAAA,CAAIW,IAAKJ,EAAKE,OAAOC,MACnBV,EAAAA,cAAAA,UAAAA,CACEY,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAETd,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACe,EAAAA,KAAI,CAACC,GAAIT,EAAKE,OAAOC,KAAMO,SAAS,OACnCjB,EAAAA,cAAAA,OAAAA,CAAMiB,SAAS,YAAYtB,KAG/BK,EAAAA,cAAAA,QAAAA,KAAQO,EAAKC,YAAYU,OAE3BlB,EAAAA,cAAAA,UAAAA,KACEA,EAAAA,cAAAA,IAAAA,CACEmB,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYa,aAAed,EAAKe,SAE/CL,SAAS,kBAMrB,KAIR,C","sources":["webpack://gatsby-starter-blog/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql, useStaticQuery, PageProps } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ninterface PostNode {\n  excerpt: string\n  fields: {\n    slug: string\n  }\n  frontmatter: {\n    date: string\n    title: string\n    description: string\n    tags: string[]\n  }\n}\n\ninterface BlogIndexQueryData {\n  site: {\n    siteMetadata: {\n      title: string\n    }\n  }\n  allMarkdownRemark: {\n    nodes: PostNode[]\n  }\n}\n\nconst BlogIndex = ({ location }: PageProps) => {\n  const data: BlogIndexQueryData = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n      allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n        nodes {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  `)\n\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n"],"names":["location","data","useStaticQuery","siteTitle","site","siteMetadata","_data$site$siteMetada","title","posts","allMarkdownRemark","nodes","length","React","Layout","Seo","Bio","style","listStyle","map","post","frontmatter","fields","slug","key","className","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}